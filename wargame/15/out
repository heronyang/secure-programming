
foo_4:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 af 10 ff ed 18    	add    %ch,0x18edff10(%edi)
 804819d:	b2 3a                	mov    $0x3a,%dl
 804819f:	42                   	inc    %edx
 80481a0:	16                   	push   %ss
 80481a1:	ba 33 c1 2f d3       	mov    $0xd32fc133,%edx
 80481a6:	31 03                	xor    %eax,(%ebx)
 80481a8:	dd                   	.byte 0xdd
 80481a9:	92                   	xchg   %eax,%edx
 80481aa:	6b                   	.byte 0x6b
 80481ab:	79                   	.byte 0x79

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	07                   	pop    %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 90    	add    %al,0x90000000
 80481bd:	2c 02                	sub    $0x2,%al
 80481bf:	22 00                	and    (%eax),%al
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 07                	add    %al,(%edi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 0a                	add    %cl,(%edx)
 80481c9:	00 00                	add    %al,(%eax)
 80481cb:	00 38                	add    %bh,(%eax)
 80481cd:	f2 8b 1c ac          	repnz mov (%esp,%ebp,4),%ebx
 80481d1:	4b                   	dec    %ebx
 80481d2:	e3 c0                	jecxz  8048194 <_init-0x1f4>
 80481d4:	67 55                	addr16 push %ebp
 80481d6:	61                   	popa   
 80481d7:	10                   	.byte 0x10
 80481d8:	8b e4                	mov    %esp,%esp
 80481da:	ee                   	out    %al,(%dx)
 80481db:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

080481dc <.dynsym>:
	...
 80481ec:	2d 00 00 00 00       	sub    $0x0,%eax
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 00                	add    %al,(%eax)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 20                	add    %ah,(%eax)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 5c 00 00          	add    %bl,0x0(%eax,%eax,1)
	...
 8048217:	00 20                	add    %ah,(%eax)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 26                	add    %ah,(%esi)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 4a 00             	add    %cl,0x0(%edx)
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	12 00                	adc    (%eax),%al
 804823a:	00 00                	add    %al,(%eax)
 804823c:	42                   	inc    %edx
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 12                	add    %dl,(%edx)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 34 00             	add    %dh,(%eax,%eax,1)
 804824e:	00 00                	add    %al,(%eax)
 8048250:	34 a0                	xor    $0xa0,%al
 8048252:	04 08                	add    $0x8,%al
 8048254:	04 00                	add    $0x0,%al
 8048256:	00 00                	add    %al,(%eax)
 8048258:	11 00                	adc    %eax,(%eax)
 804825a:	19 00                	sbb    %eax,(%eax)
 804825c:	0b 00                	or     (%eax),%eax
 804825e:	00 00                	add    %al,(%eax)
 8048260:	3c 86                	cmp    $0x86,%al
 8048262:	04 08                	add    $0x8,%al
 8048264:	04 00                	add    $0x0,%al
 8048266:	00 00                	add    %al,(%eax)
 8048268:	11 00                	adc    %eax,(%eax)
 804826a:	0f 00 1a             	ltr    (%edx)
 804826d:	00 00                	add    %al,(%eax)
 804826f:	00 38                	add    %bh,(%eax)
 8048271:	a0 04 08 04 00       	mov    0x40804,%al
 8048276:	00 00                	add    %al,(%eax)
 8048278:	11 00                	adc    %eax,(%eax)
 804827a:	19 00                	sbb    %eax,(%eax)
 804827c:	3b 00                	cmp    (%eax),%eax
 804827e:	00 00                	add    %al,(%eax)
 8048280:	e0 83                	loopne 8048205 <_init-0x183>
 8048282:	04 08                	add    $0x8,%al
 8048284:	00 00                	add    %al,(%eax)
 8048286:	00 00                	add    %al,(%eax)
 8048288:	12 00                	adc    (%eax),%al
	...

Disassembly of section .dynstr:

0804828c <.dynstr>:
 804828c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048290:	63 2e                	arpl   %bp,(%esi)
 8048292:	73 6f                	jae    8048303 <_init-0x85>
 8048294:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048299:	4f                   	dec    %edi
 804829a:	5f                   	pop    %edi
 804829b:	73 74                	jae    8048311 <_init-0x77>
 804829d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80482a4:	64 
 80482a5:	00 73 74             	add    %dh,0x74(%ebx)
 80482a8:	64 69 6e 00 66 67 65 	imul   $0x74656766,%fs:0x0(%esi),%ebp
 80482af:	74 
 80482b0:	73 00                	jae    80482b2 <_init-0xd6>
 80482b2:	73 74                	jae    8048328 <_init-0x60>
 80482b4:	72 6c                	jb     8048322 <_init-0x66>
 80482b6:	65 6e                	outsb  %gs:(%esi),(%dx)
 80482b8:	00 6d 65             	add    %ch,0x65(%ebp)
 80482bb:	6d                   	insl   (%dx),%es:(%edi)
 80482bc:	63 70 79             	arpl   %si,0x79(%eax)
 80482bf:	00 73 74             	add    %dh,0x74(%ebx)
 80482c2:	64                   	fs
 80482c3:	65                   	gs
 80482c4:	72 72                	jb     8048338 <_init-0x50>
 80482c6:	00 73 79             	add    %dh,0x79(%ebx)
 80482c9:	73 74                	jae    804833f <_init-0x49>
 80482cb:	65                   	gs
 80482cc:	6d                   	insl   (%dx),%es:(%edi)
 80482cd:	00 66 70             	add    %ah,0x70(%esi)
 80482d0:	72 69                	jb     804833b <_init-0x4d>
 80482d2:	6e                   	outsb  %ds:(%esi),(%dx)
 80482d3:	74 66                	je     804833b <_init-0x4d>
 80482d5:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482d8:	6c                   	insb   (%dx),%es:(%edi)
 80482d9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482e0:	72 74                	jb     8048356 <_init-0x32>
 80482e2:	5f                   	pop    %edi
 80482e3:	6d                   	insl   (%dx),%es:(%edi)
 80482e4:	61                   	popa   
 80482e5:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482ec:	6f                   	outsl  %ds:(%esi),(%dx)
 80482ed:	6e                   	outsb  %ds:(%esi),(%dx)
 80482ee:	5f                   	pop    %edi
 80482ef:	73 74                	jae    8048365 <_init-0x23>
 80482f1:	61                   	popa   
 80482f2:	72 74                	jb     8048368 <_init-0x20>
 80482f4:	5f                   	pop    %edi
 80482f5:	5f                   	pop    %edi
 80482f6:	00 47 4c             	add    %al,0x4c(%edi)
 80482f9:	49                   	dec    %ecx
 80482fa:	42                   	inc    %edx
 80482fb:	43                   	inc    %ebx
 80482fc:	5f                   	pop    %edi
 80482fd:	32 2e                	xor    (%esi),%ch
 80482ff:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048302 <.gnu.version>:
 8048302:	00 00                	add    %al,(%eax)
 8048304:	02 00                	add    (%eax),%al
 8048306:	02 00                	add    (%eax),%al
 8048308:	00 00                	add    %al,(%eax)
 804830a:	02 00                	add    (%eax),%al
 804830c:	02 00                	add    (%eax),%al
 804830e:	02 00                	add    (%eax),%al
 8048310:	02 00                	add    (%eax),%al
 8048312:	01 00                	add    %eax,(%eax)
 8048314:	02 00                	add    (%eax),%al
 8048316:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

08048318 <.gnu.version_r>:
 8048318:	01 00                	add    %eax,(%eax)
 804831a:	01 00                	add    %eax,(%eax)
 804831c:	01 00                	add    %eax,(%eax)
 804831e:	00 00                	add    %al,(%eax)
 8048320:	10 00                	adc    %al,(%eax)
 8048322:	00 00                	add    %al,(%eax)
 8048324:	00 00                	add    %al,(%eax)
 8048326:	00 00                	add    %al,(%eax)
 8048328:	10 69 69             	adc    %ch,0x69(%ecx)
 804832b:	0d 00 00 02 00       	or     $0x20000,%eax
 8048330:	6b 00 00             	imul   $0x0,(%eax),%eax
 8048333:	00 00                	add    %al,(%eax)
 8048335:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048338 <.rel.dyn>:
 8048338:	fc                   	cld    
 8048339:	9f                   	lahf   
 804833a:	04 08                	add    $0x8,%al
 804833c:	06                   	push   %es
 804833d:	03 00                	add    (%eax),%eax
 804833f:	00 34 a0             	add    %dh,(%eax,%eiz,4)
 8048342:	04 08                	add    $0x8,%al
 8048344:	05 07 00 00 38       	add    $0x38000007,%eax
 8048349:	a0 04 08 05 09       	mov    0x9050804,%al
	...

Disassembly of section .rel.plt:

08048350 <.rel.plt>:
 8048350:	0c a0                	or     $0xa0,%al
 8048352:	04 08                	add    $0x8,%al
 8048354:	07                   	pop    %es
 8048355:	01 00                	add    %eax,(%eax)
 8048357:	00 10                	add    %dl,(%eax)
 8048359:	a0 04 08 07 02       	mov    0x2070804,%al
 804835e:	00 00                	add    %al,(%eax)
 8048360:	14 a0                	adc    $0xa0,%al
 8048362:	04 08                	add    $0x8,%al
 8048364:	07                   	pop    %es
 8048365:	0a 00                	or     (%eax),%al
 8048367:	00 18                	add    %bl,(%eax)
 8048369:	a0 04 08 07 03       	mov    0x3070804,%al
 804836e:	00 00                	add    %al,(%eax)
 8048370:	1c a0                	sbb    $0xa0,%al
 8048372:	04 08                	add    $0x8,%al
 8048374:	07                   	pop    %es
 8048375:	04 00                	add    $0x0,%al
 8048377:	00 20                	add    %ah,(%eax)
 8048379:	a0 04 08 07 05       	mov    0x5070804,%al
 804837e:	00 00                	add    %al,(%eax)
 8048380:	24 a0                	and    $0xa0,%al
 8048382:	04 08                	add    $0x8,%al
 8048384:	07                   	pop    %es
 8048385:	06                   	push   %es
	...

Disassembly of section .init:

08048388 <_init>:
 8048388:	53                   	push   %ebx
 8048389:	83 ec 08             	sub    $0x8,%esp
 804838c:	e8 cf 00 00 00       	call   8048460 <__x86.get_pc_thunk.bx>
 8048391:	81 c3 6f 1c 00 00    	add    $0x1c6f,%ebx
 8048397:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804839d:	85 c0                	test   %eax,%eax
 804839f:	74 05                	je     80483a6 <_init+0x1e>
 80483a1:	e8 4a 00 00 00       	call   80483f0 <__gmon_start__@plt>
 80483a6:	83 c4 08             	add    $0x8,%esp
 80483a9:	5b                   	pop    %ebx
 80483aa:	c3                   	ret    

Disassembly of section .plt:

080483b0 <memcpy@plt-0x10>:
 80483b0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483b6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483bc:	00 00                	add    %al,(%eax)
	...

080483c0 <memcpy@plt>:
 80483c0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483c6:	68 00 00 00 00       	push   $0x0
 80483cb:	e9 e0 ff ff ff       	jmp    80483b0 <_init+0x28>

080483d0 <fgets@plt>:
 80483d0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483d6:	68 08 00 00 00       	push   $0x8
 80483db:	e9 d0 ff ff ff       	jmp    80483b0 <_init+0x28>

080483e0 <system@plt>:
 80483e0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483e6:	68 10 00 00 00       	push   $0x10
 80483eb:	e9 c0 ff ff ff       	jmp    80483b0 <_init+0x28>

080483f0 <__gmon_start__@plt>:
 80483f0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483f6:	68 18 00 00 00       	push   $0x18
 80483fb:	e9 b0 ff ff ff       	jmp    80483b0 <_init+0x28>

08048400 <strlen@plt>:
 8048400:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048406:	68 20 00 00 00       	push   $0x20
 804840b:	e9 a0 ff ff ff       	jmp    80483b0 <_init+0x28>

08048410 <__libc_start_main@plt>:
 8048410:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048416:	68 28 00 00 00       	push   $0x28
 804841b:	e9 90 ff ff ff       	jmp    80483b0 <_init+0x28>

08048420 <fprintf@plt>:
 8048420:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048426:	68 30 00 00 00       	push   $0x30
 804842b:	e9 80 ff ff ff       	jmp    80483b0 <_init+0x28>

Disassembly of section .text:

08048430 <_start>:
 8048430:	31 ed                	xor    %ebp,%ebp
 8048432:	5e                   	pop    %esi
 8048433:	89 e1                	mov    %esp,%ecx
 8048435:	83 e4 f0             	and    $0xfffffff0,%esp
 8048438:	50                   	push   %eax
 8048439:	54                   	push   %esp
 804843a:	52                   	push   %edx
 804843b:	68 20 86 04 08       	push   $0x8048620
 8048440:	68 b0 85 04 08       	push   $0x80485b0
 8048445:	51                   	push   %ecx
 8048446:	56                   	push   %esi
 8048447:	68 56 85 04 08       	push   $0x8048556
 804844c:	e8 bf ff ff ff       	call   8048410 <__libc_start_main@plt>
 8048451:	f4                   	hlt    
 8048452:	66 90                	xchg   %ax,%ax
 8048454:	66 90                	xchg   %ax,%ax
 8048456:	66 90                	xchg   %ax,%ax
 8048458:	66 90                	xchg   %ax,%ax
 804845a:	66 90                	xchg   %ax,%ax
 804845c:	66 90                	xchg   %ax,%ax
 804845e:	66 90                	xchg   %ax,%ax

08048460 <__x86.get_pc_thunk.bx>:
 8048460:	8b 1c 24             	mov    (%esp),%ebx
 8048463:	c3                   	ret    
 8048464:	66 90                	xchg   %ax,%ax
 8048466:	66 90                	xchg   %ax,%ax
 8048468:	66 90                	xchg   %ax,%ax
 804846a:	66 90                	xchg   %ax,%ax
 804846c:	66 90                	xchg   %ax,%ax
 804846e:	66 90                	xchg   %ax,%ax

08048470 <deregister_tm_clones>:
 8048470:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 8048475:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804847a:	83 f8 06             	cmp    $0x6,%eax
 804847d:	77 01                	ja     8048480 <deregister_tm_clones+0x10>
 804847f:	c3                   	ret    
 8048480:	b8 00 00 00 00       	mov    $0x0,%eax
 8048485:	85 c0                	test   %eax,%eax
 8048487:	74 f6                	je     804847f <deregister_tm_clones+0xf>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 18             	sub    $0x18,%esp
 804848f:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048496:	ff d0                	call   *%eax
 8048498:	c9                   	leave  
 8048499:	c3                   	ret    
 804849a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484a0 <register_tm_clones>:
 80484a0:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 80484a5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484aa:	c1 f8 02             	sar    $0x2,%eax
 80484ad:	89 c2                	mov    %eax,%edx
 80484af:	c1 ea 1f             	shr    $0x1f,%edx
 80484b2:	01 d0                	add    %edx,%eax
 80484b4:	d1 f8                	sar    %eax
 80484b6:	75 01                	jne    80484b9 <register_tm_clones+0x19>
 80484b8:	c3                   	ret    
 80484b9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484be:	85 d2                	test   %edx,%edx
 80484c0:	74 f6                	je     80484b8 <register_tm_clones+0x18>
 80484c2:	55                   	push   %ebp
 80484c3:	89 e5                	mov    %esp,%ebp
 80484c5:	83 ec 18             	sub    $0x18,%esp
 80484c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484cc:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 80484d3:	ff d2                	call   *%edx
 80484d5:	c9                   	leave  
 80484d6:	c3                   	ret    
 80484d7:	89 f6                	mov    %esi,%esi
 80484d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484e0 <__do_global_dtors_aux>:
 80484e0:	80 3d 3c a0 04 08 00 	cmpb   $0x0,0x804a03c
 80484e7:	75 13                	jne    80484fc <__do_global_dtors_aux+0x1c>
 80484e9:	55                   	push   %ebp
 80484ea:	89 e5                	mov    %esp,%ebp
 80484ec:	83 ec 08             	sub    $0x8,%esp
 80484ef:	e8 7c ff ff ff       	call   8048470 <deregister_tm_clones>
 80484f4:	c6 05 3c a0 04 08 01 	movb   $0x1,0x804a03c
 80484fb:	c9                   	leave  
 80484fc:	f3 c3                	repz ret 
 80484fe:	66 90                	xchg   %ax,%ax

08048500 <frame_dummy>:
 8048500:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048505:	85 c0                	test   %eax,%eax
 8048507:	74 1f                	je     8048528 <frame_dummy+0x28>
 8048509:	b8 00 00 00 00       	mov    $0x0,%eax
 804850e:	85 c0                	test   %eax,%eax
 8048510:	74 16                	je     8048528 <frame_dummy+0x28>
 8048512:	55                   	push   %ebp
 8048513:	89 e5                	mov    %esp,%ebp
 8048515:	83 ec 18             	sub    $0x18,%esp
 8048518:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804851f:	ff d0                	call   *%eax
 8048521:	c9                   	leave  
 8048522:	e9 79 ff ff ff       	jmp    80484a0 <register_tm_clones>
 8048527:	90                   	nop
 8048528:	e9 73 ff ff ff       	jmp    80484a0 <register_tm_clones>

0804852d <foo>:
 804852d:	55                   	push   %ebp
 804852e:	89 e5                	mov    %esp,%ebp
 8048530:	83 ec 28             	sub    $0x28,%esp
 8048533:	8b 45 08             	mov    0x8(%ebp),%eax
 8048536:	89 04 24             	mov    %eax,(%esp)
 8048539:	e8 c2 fe ff ff       	call   8048400 <strlen@plt>
 804853e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048542:	8b 45 08             	mov    0x8(%ebp),%eax
 8048545:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048549:	8d 45 ec             	lea    -0x14(%ebp),%eax
 804854c:	89 04 24             	mov    %eax,(%esp)
 804854f:	e8 6c fe ff ff       	call   80483c0 <memcpy@plt>
 8048554:	c9                   	leave  
 8048555:	c3                   	ret    

08048556 <main>:
 8048556:	55                   	push   %ebp
 8048557:	89 e5                	mov    %esp,%ebp
 8048559:	83 e4 f0             	and    $0xfffffff0,%esp
 804855c:	81 ec 10 10 00 00    	sub    $0x1010,%esp
 8048562:	a1 34 a0 04 08       	mov    0x804a034,%eax
 8048567:	c7 44 24 08 e0 83 04 	movl   $0x80483e0,0x8(%esp)
 804856e:	08 
 804856f:	c7 44 24 04 48 86 04 	movl   $0x8048648,0x4(%esp)
 8048576:	08 
 8048577:	89 04 24             	mov    %eax,(%esp)
 804857a:	e8 a1 fe ff ff       	call   8048420 <fprintf@plt>
 804857f:	a1 38 a0 04 08       	mov    0x804a038,%eax
 8048584:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048588:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 804858f:	00 
 8048590:	8d 44 24 10          	lea    0x10(%esp),%eax
 8048594:	89 04 24             	mov    %eax,(%esp)
 8048597:	e8 34 fe ff ff       	call   80483d0 <fgets@plt>
 804859c:	8d 44 24 10          	lea    0x10(%esp),%eax
 80485a0:	89 04 24             	mov    %eax,(%esp)
 80485a3:	e8 85 ff ff ff       	call   804852d <foo>
 80485a8:	c9                   	leave  
 80485a9:	c3                   	ret    
 80485aa:	66 90                	xchg   %ax,%ax
 80485ac:	66 90                	xchg   %ax,%ax
 80485ae:	66 90                	xchg   %ax,%ax

080485b0 <__libc_csu_init>:
 80485b0:	55                   	push   %ebp
 80485b1:	57                   	push   %edi
 80485b2:	31 ff                	xor    %edi,%edi
 80485b4:	56                   	push   %esi
 80485b5:	53                   	push   %ebx
 80485b6:	e8 a5 fe ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 80485bb:	81 c3 45 1a 00 00    	add    $0x1a45,%ebx
 80485c1:	83 ec 1c             	sub    $0x1c,%esp
 80485c4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485c8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80485ce:	e8 b5 fd ff ff       	call   8048388 <_init>
 80485d3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80485d9:	29 c6                	sub    %eax,%esi
 80485db:	c1 fe 02             	sar    $0x2,%esi
 80485de:	85 f6                	test   %esi,%esi
 80485e0:	74 27                	je     8048609 <__libc_csu_init+0x59>
 80485e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485e8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485ec:	89 2c 24             	mov    %ebp,(%esp)
 80485ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485f3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485fb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048602:	83 c7 01             	add    $0x1,%edi
 8048605:	39 f7                	cmp    %esi,%edi
 8048607:	75 df                	jne    80485e8 <__libc_csu_init+0x38>
 8048609:	83 c4 1c             	add    $0x1c,%esp
 804860c:	5b                   	pop    %ebx
 804860d:	5e                   	pop    %esi
 804860e:	5f                   	pop    %edi
 804860f:	5d                   	pop    %ebp
 8048610:	c3                   	ret    
 8048611:	eb 0d                	jmp    8048620 <__libc_csu_fini>
 8048613:	90                   	nop
 8048614:	90                   	nop
 8048615:	90                   	nop
 8048616:	90                   	nop
 8048617:	90                   	nop
 8048618:	90                   	nop
 8048619:	90                   	nop
 804861a:	90                   	nop
 804861b:	90                   	nop
 804861c:	90                   	nop
 804861d:	90                   	nop
 804861e:	90                   	nop
 804861f:	90                   	nop

08048620 <__libc_csu_fini>:
 8048620:	f3 c3                	repz ret 

Disassembly of section .fini:

08048624 <_fini>:
 8048624:	53                   	push   %ebx
 8048625:	83 ec 08             	sub    $0x8,%esp
 8048628:	e8 33 fe ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 804862d:	81 c3 d3 19 00 00    	add    $0x19d3,%ebx
 8048633:	83 c4 08             	add    $0x8,%esp
 8048636:	5b                   	pop    %ebx
 8048637:	c3                   	ret    

Disassembly of section .rodata:

08048638 <_fp_hw>:
 8048638:	03 00                	add    (%eax),%eax
	...

0804863c <_IO_stdin_used>:
 804863c:	01 00                	add    %eax,(%eax)
 804863e:	02 00                	add    (%eax),%al
 8048640:	2f                   	das    
 8048641:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 8048644:	2f                   	das    
 8048645:	73 68                	jae    80486af <_IO_stdin_used+0x73>
 8048647:	00 46 75             	add    %al,0x75(%esi)
 804864a:	6e                   	outsb  %ds:(%esi),(%dx)
 804864b:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 804864f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048650:	3a 20                	cmp    (%eax),%ah
 8048652:	73 79                	jae    80486cd <_IO_stdin_used+0x91>
 8048654:	73 74                	jae    80486ca <_IO_stdin_used+0x8e>
 8048656:	65                   	gs
 8048657:	6d                   	insl   (%dx),%es:(%edi)
 8048658:	27                   	daa    
 8048659:	73 20                	jae    804867b <_IO_stdin_used+0x3f>
 804865b:	61                   	popa   
 804865c:	64                   	fs
 804865d:	64                   	fs
 804865e:	72 65                	jb     80486c5 <_IO_stdin_used+0x89>
 8048660:	73 73                	jae    80486d5 <_IO_stdin_used+0x99>
 8048662:	20 69 73             	and    %ch,0x73(%ecx)
 8048665:	20 3a                	and    %bh,(%edx)
 8048667:	20 20                	and    %ah,(%eax)
 8048669:	30 78 25             	xor    %bh,0x25(%eax)
 804866c:	78 0a                	js     8048678 <_IO_stdin_used+0x3c>
	...

Disassembly of section .eh_frame_hdr:

08048670 <.eh_frame_hdr>:
 8048670:	01 1b                	add    %ebx,(%ebx)
 8048672:	03 3b                	add    (%ebx),%edi
 8048674:	30 00                	xor    %al,(%eax)
 8048676:	00 00                	add    %al,(%eax)
 8048678:	05 00 00 00 40       	add    $0x40000000,%eax
 804867d:	fd                   	std    
 804867e:	ff                   	(bad)  
 804867f:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 8048683:	00 bd fe ff ff 70    	add    %bh,0x70fffffe(%ebp)
 8048689:	00 00                	add    %al,(%eax)
 804868b:	00 e6                	add    %ah,%dh
 804868d:	fe                   	(bad)  
 804868e:	ff                   	(bad)  
 804868f:	ff 90 00 00 00 40    	call   *0x40000000(%eax)
 8048695:	ff                   	(bad)  
 8048696:	ff                   	(bad)  
 8048697:	ff b0 00 00 00 b0    	pushl  -0x50000000(%eax)
 804869d:	ff                   	(bad)  
 804869e:	ff                   	(bad)  
 804869f:	ff ec                	ljmp   *<internal disassembler error>
 80486a1:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080486a4 <__FRAME_END__-0xcc>:
 80486a4:	14 00                	adc    $0x0,%al
 80486a6:	00 00                	add    %al,(%eax)
 80486a8:	00 00                	add    %al,(%eax)
 80486aa:	00 00                	add    %al,(%eax)
 80486ac:	01 7a 52             	add    %edi,0x52(%edx)
 80486af:	00 01                	add    %al,(%ecx)
 80486b1:	7c 08                	jl     80486bb <_IO_stdin_used+0x7f>
 80486b3:	01 1b                	add    %ebx,(%ebx)
 80486b5:	0c 04                	or     $0x4,%al
 80486b7:	04 88                	add    $0x88,%al
 80486b9:	01 00                	add    %eax,(%eax)
 80486bb:	00 20                	add    %ah,(%eax)
 80486bd:	00 00                	add    %al,(%eax)
 80486bf:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80486c2:	00 00                	add    %al,(%eax)
 80486c4:	ec                   	in     (%dx),%al
 80486c5:	fc                   	cld    
 80486c6:	ff                   	(bad)  
 80486c7:	ff 80 00 00 00 00    	incl   0x0(%eax)
 80486cd:	0e                   	push   %cs
 80486ce:	08 46 0e             	or     %al,0xe(%esi)
 80486d1:	0c 4a                	or     $0x4a,%al
 80486d3:	0f 0b                	ud2    
 80486d5:	74 04                	je     80486db <_IO_stdin_used+0x9f>
 80486d7:	78 00                	js     80486d9 <_IO_stdin_used+0x9d>
 80486d9:	3f                   	aas    
 80486da:	1a 3b                	sbb    (%ebx),%bh
 80486dc:	2a 32                	sub    (%edx),%dh
 80486de:	24 22                	and    $0x22,%al
 80486e0:	1c 00                	sbb    $0x0,%al
 80486e2:	00 00                	add    %al,(%eax)
 80486e4:	40                   	inc    %eax
 80486e5:	00 00                	add    %al,(%eax)
 80486e7:	00 45 fe             	add    %al,-0x2(%ebp)
 80486ea:	ff                   	(bad)  
 80486eb:	ff 29                	ljmp   *(%ecx)
 80486ed:	00 00                	add    %al,(%eax)
 80486ef:	00 00                	add    %al,(%eax)
 80486f1:	41                   	inc    %ecx
 80486f2:	0e                   	push   %cs
 80486f3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80486f9:	65 c5 0c 04          	lds    %gs:(%esp,%eax,1),%ecx
 80486fd:	04 00                	add    $0x0,%al
 80486ff:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048702:	00 00                	add    %al,(%eax)
 8048704:	60                   	pusha  
 8048705:	00 00                	add    %al,(%eax)
 8048707:	00 4e fe             	add    %cl,-0x2(%esi)
 804870a:	ff                   	(bad)  
 804870b:	ff 54 00 00          	call   *0x0(%eax,%eax,1)
 804870f:	00 00                	add    %al,(%eax)
 8048711:	41                   	inc    %ecx
 8048712:	0e                   	push   %cs
 8048713:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048719:	02 50 c5             	add    -0x3b(%eax),%dl
 804871c:	0c 04                	or     $0x4,%al
 804871e:	04 00                	add    $0x0,%al
 8048720:	38 00                	cmp    %al,(%eax)
 8048722:	00 00                	add    %al,(%eax)
 8048724:	80 00 00             	addb   $0x0,(%eax)
 8048727:	00 88 fe ff ff 61    	add    %cl,0x61fffffe(%eax)
 804872d:	00 00                	add    %al,(%eax)
 804872f:	00 00                	add    %al,(%eax)
 8048731:	41                   	inc    %ecx
 8048732:	0e                   	push   %cs
 8048733:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048739:	87 03                	xchg   %eax,(%ebx)
 804873b:	43                   	inc    %ebx
 804873c:	0e                   	push   %cs
 804873d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048743:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 804874a:	0e                   	push   %cs
 804874b:	14 41                	adc    $0x41,%al
 804874d:	c3                   	ret    
 804874e:	0e                   	push   %cs
 804874f:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048752:	0e                   	push   %cs
 8048753:	0c 41                	or     $0x41,%al
 8048755:	c7                   	(bad)  
 8048756:	0e                   	push   %cs
 8048757:	08 41 c5             	or     %al,-0x3b(%ecx)
 804875a:	0e                   	push   %cs
 804875b:	04 10                	add    $0x10,%al
 804875d:	00 00                	add    %al,(%eax)
 804875f:	00 bc 00 00 00 bc fe 	add    %bh,-0x1440000(%eax,%eax,1)
 8048766:	ff                   	(bad)  
 8048767:	ff 02                	incl   (%edx)
 8048769:	00 00                	add    %al,(%eax)
 804876b:	00 00                	add    %al,(%eax)
 804876d:	00 00                	add    %al,(%eax)
	...

08048770 <__FRAME_END__>:
 8048770:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	00                   	.byte 0x0
 8049f09:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	e0 84                	loopne 8049e92 <__FRAME_END__+0x1722>
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	88 83 04 08 0d 00    	mov    %al,0xd0804(%ebx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	24 86                	and    $0x86,%al
 8049f2a:	04 08                	add    $0x8,%al
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	8c 82 04 08 06 00    	mov    %es,0x60804(%edx)
 8049f5e:	00 00                	add    %al,(%eax)
 8049f60:	dc 81 04 08 0a 00    	faddl  0xa0804(%ecx)
 8049f66:	00 00                	add    %al,(%eax)
 8049f68:	75 00                	jne    8049f6a <_DYNAMIC+0x56>
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	38 00                	cmp    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 50 83             	add    %dl,-0x7d(%eax)
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	38 83 04 08 12 00    	cmp    %al,0x120804(%ebx)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	18 00                	sbb    %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 18             	ljmp   *0x18(%edi)
 8049fb9:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 02             	ljmp   *0x2(%edi)
 8049fc9:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	c6 83 04 08 d6 83 04 	movb   $0x4,-0x7c29f7fc(%ebx)
 804a013:	08 e6                	or     %ah,%dh
 804a015:	83 04 08 f6          	addl   $0xfffffff6,(%eax,%ecx,1)
 804a019:	83 04 08 06          	addl   $0x6,(%eax,%ecx,1)
 804a01d:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a020:	16                   	push   %ss
 804a021:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a024:	26 84 04 08          	test   %al,%es:(%eax,%ecx,1)

Disassembly of section .data:

0804a028 <__data_start>:
 804a028:	00 00                	add    %al,(%eax)
	...

0804a02c <__dso_handle>:
 804a02c:	00 00                	add    %al,(%eax)
	...

0804a030 <binsh>:
 804a030:	40                   	inc    %eax
 804a031:	86 04 08             	xchg   %al,(%eax,%ecx,1)

Disassembly of section .bss:

0804a034 <__bss_start>:
 804a034:	00 00                	add    %al,(%eax)
	...

0804a038 <stdin@@GLIBC_2.0>:
 804a038:	00 00                	add    %al,(%eax)
	...

0804a03c <completed.6590>:
 804a03c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048310>
   a:	74 75                	je     81 <_init-0x8048307>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  17:	75 6e                	jne    87 <_init-0x8048301>
  19:	74 75                	je     90 <_init-0x80482f8>
  1b:	31 29                	xor    %ebp,(%ecx)
  1d:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  20:	38 2e                	cmp    %ch,(%esi)
  22:	32 00                	xor    (%eax),%al

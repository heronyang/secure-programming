
foo_5:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 a5 51 23 bb a6    	add    %ah,-0x5944dcaf(%ebp)
 804819d:	fa                   	cli    
 804819e:	8d b1 4f 8a 08 9f    	lea    -0x60f775b1(%ecx),%esi
 80481a4:	97                   	xchg   %eax,%edi
 80481a5:	3c 6b                	cmp    $0x6b,%al
 80481a7:	5f                   	pop    %edi
 80481a8:	49                   	dec    %ecx
 80481a9:	f4                   	hlt    
 80481aa:	50                   	push   %eax
 80481ab:	be                   	.byte 0xbe

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	07                   	pop    %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 80    	add    %al,0x80000000
 80481bd:	28 02                	sub    %al,(%edx)
 80481bf:	22 00                	and    (%eax),%al
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 07                	add    %al,(%edi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 00                	add    %al,(%eax)
 80481c9:	00 00                	add    %al,(%eax)
 80481cb:	00 38                	add    %bh,(%eax)
 80481cd:	f2 8b 1c ac          	repnz mov (%esp,%ebp,4),%ebx
 80481d1:	4b                   	dec    %ebx
 80481d2:	e3 c0                	jecxz  8048194 <_init-0x1d0>
 80481d4:	67 55                	addr16 push %ebp
 80481d6:	61                   	popa   
 80481d7:	10                   	.byte 0x10

Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	2d 00 00 00 00       	sub    $0x0,%eax
 80481ed:	00 00                	add    %al,(%eax)
 80481ef:	00 00                	add    %al,(%eax)
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 12                	add    %dl,(%edx)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 20                	add    %ah,(%eax)
	...
 8048201:	00 00                	add    %al,(%eax)
 8048203:	00 12                	add    %dl,(%edx)
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 55 00             	add    %dl,0x0(%ebp)
	...
 8048212:	00 00                	add    %al,(%eax)
 8048214:	20 00                	and    %al,(%eax)
 8048216:	00 00                	add    %al,(%eax)
 8048218:	26 00 00             	add    %al,%es:(%eax)
	...
 8048223:	00 12                	add    %dl,(%edx)
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 43 00             	add    %al,0x0(%ebx)
	...
 8048232:	00 00                	add    %al,(%eax)
 8048234:	12 00                	adc    (%eax),%al
 8048236:	00 00                	add    %al,(%eax)
 8048238:	3b 00                	cmp    (%eax),%eax
	...
 8048242:	00 00                	add    %al,(%eax)
 8048244:	12 00                	adc    (%eax),%al
 8048246:	00 00                	add    %al,(%eax)
 8048248:	34 00                	xor    $0x0,%al
 804824a:	00 00                	add    %al,(%eax)
 804824c:	30 a0 04 08 04 00    	xor    %ah,0x40804(%eax)
 8048252:	00 00                	add    %al,(%eax)
 8048254:	11 00                	adc    %eax,(%eax)
 8048256:	19 00                	sbb    %eax,(%eax)
 8048258:	0b 00                	or     (%eax),%eax
 804825a:	00 00                	add    %al,(%eax)
 804825c:	1c 86                	sbb    $0x86,%al
 804825e:	04 08                	add    $0x8,%al
 8048260:	04 00                	add    $0x0,%al
 8048262:	00 00                	add    %al,(%eax)
 8048264:	11 00                	adc    %eax,(%eax)
 8048266:	0f 00 1a             	ltr    (%edx)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 34 a0             	add    %dh,(%eax,%eiz,4)
 804826e:	04 08                	add    $0x8,%al
 8048270:	04 00                	add    $0x0,%al
 8048272:	00 00                	add    %al,(%eax)
 8048274:	11 00                	adc    %eax,(%eax)
 8048276:	19 00                	sbb    %eax,(%eax)

Disassembly of section .dynstr:

08048278 <.dynstr>:
 8048278:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804827c:	63 2e                	arpl   %bp,(%esi)
 804827e:	73 6f                	jae    80482ef <_init-0x75>
 8048280:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048285:	4f                   	dec    %edi
 8048286:	5f                   	pop    %edi
 8048287:	73 74                	jae    80482fd <_init-0x67>
 8048289:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048290:	64 
 8048291:	00 73 74             	add    %dh,0x74(%ebx)
 8048294:	64 69 6e 00 66 67 65 	imul   $0x74656766,%fs:0x0(%esi),%ebp
 804829b:	74 
 804829c:	73 00                	jae    804829e <_init-0xc6>
 804829e:	73 74                	jae    8048314 <_init-0x50>
 80482a0:	72 6c                	jb     804830e <_init-0x56>
 80482a2:	65 6e                	outsb  %gs:(%esi),(%dx)
 80482a4:	00 6d 65             	add    %ch,0x65(%ebp)
 80482a7:	6d                   	insl   (%dx),%es:(%edi)
 80482a8:	63 70 79             	arpl   %si,0x79(%eax)
 80482ab:	00 73 74             	add    %dh,0x74(%ebx)
 80482ae:	64                   	fs
 80482af:	65                   	gs
 80482b0:	72 72                	jb     8048324 <_init-0x40>
 80482b2:	00 66 70             	add    %ah,0x70(%esi)
 80482b5:	72 69                	jb     8048320 <_init-0x44>
 80482b7:	6e                   	outsb  %ds:(%esi),(%dx)
 80482b8:	74 66                	je     8048320 <_init-0x44>
 80482ba:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482bd:	6c                   	insb   (%dx),%es:(%edi)
 80482be:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482c5:	72 74                	jb     804833b <_init-0x29>
 80482c7:	5f                   	pop    %edi
 80482c8:	6d                   	insl   (%dx),%es:(%edi)
 80482c9:	61                   	popa   
 80482ca:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482d1:	6f                   	outsl  %ds:(%esi),(%dx)
 80482d2:	6e                   	outsb  %ds:(%esi),(%dx)
 80482d3:	5f                   	pop    %edi
 80482d4:	73 74                	jae    804834a <_init-0x1a>
 80482d6:	61                   	popa   
 80482d7:	72 74                	jb     804834d <_init-0x17>
 80482d9:	5f                   	pop    %edi
 80482da:	5f                   	pop    %edi
 80482db:	00 47 4c             	add    %al,0x4c(%edi)
 80482de:	49                   	dec    %ecx
 80482df:	42                   	inc    %edx
 80482e0:	43                   	inc    %ebx
 80482e1:	5f                   	pop    %edi
 80482e2:	32 2e                	xor    (%esi),%ch
 80482e4:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

080482e6 <.gnu.version>:
 80482e6:	00 00                	add    %al,(%eax)
 80482e8:	02 00                	add    (%eax),%al
 80482ea:	02 00                	add    (%eax),%al
 80482ec:	00 00                	add    %al,(%eax)
 80482ee:	02 00                	add    (%eax),%al
 80482f0:	02 00                	add    (%eax),%al
 80482f2:	02 00                	add    (%eax),%al
 80482f4:	02 00                	add    (%eax),%al
 80482f6:	01 00                	add    %eax,(%eax)
 80482f8:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

080482fc <.gnu.version_r>:
 80482fc:	01 00                	add    %eax,(%eax)
 80482fe:	01 00                	add    %eax,(%eax)
 8048300:	01 00                	add    %eax,(%eax)
 8048302:	00 00                	add    %al,(%eax)
 8048304:	10 00                	adc    %al,(%eax)
 8048306:	00 00                	add    %al,(%eax)
 8048308:	00 00                	add    %al,(%eax)
 804830a:	00 00                	add    %al,(%eax)
 804830c:	10 69 69             	adc    %ch,0x69(%ecx)
 804830f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048314:	64 00 00             	add    %al,%fs:(%eax)
 8048317:	00 00                	add    %al,(%eax)
 8048319:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804831c <.rel.dyn>:
 804831c:	fc                   	cld    
 804831d:	9f                   	lahf   
 804831e:	04 08                	add    $0x8,%al
 8048320:	06                   	push   %es
 8048321:	03 00                	add    (%eax),%eax
 8048323:	00 30                	add    %dh,(%eax)
 8048325:	a0 04 08 05 07       	mov    0x7050804,%al
 804832a:	00 00                	add    %al,(%eax)
 804832c:	34 a0                	xor    $0xa0,%al
 804832e:	04 08                	add    $0x8,%al
 8048330:	05                   	.byte 0x5
 8048331:	09 00                	or     %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048334 <.rel.plt>:
 8048334:	0c a0                	or     $0xa0,%al
 8048336:	04 08                	add    $0x8,%al
 8048338:	07                   	pop    %es
 8048339:	01 00                	add    %eax,(%eax)
 804833b:	00 10                	add    %dl,(%eax)
 804833d:	a0 04 08 07 02       	mov    0x2070804,%al
 8048342:	00 00                	add    %al,(%eax)
 8048344:	14 a0                	adc    $0xa0,%al
 8048346:	04 08                	add    $0x8,%al
 8048348:	07                   	pop    %es
 8048349:	03 00                	add    (%eax),%eax
 804834b:	00 18                	add    %bl,(%eax)
 804834d:	a0 04 08 07 04       	mov    0x4070804,%al
 8048352:	00 00                	add    %al,(%eax)
 8048354:	1c a0                	sbb    $0xa0,%al
 8048356:	04 08                	add    $0x8,%al
 8048358:	07                   	pop    %es
 8048359:	05 00 00 20 a0       	add    $0xa0200000,%eax
 804835e:	04 08                	add    $0x8,%al
 8048360:	07                   	pop    %es
 8048361:	06                   	push   %es
	...

Disassembly of section .init:

08048364 <_init>:
 8048364:	53                   	push   %ebx
 8048365:	83 ec 08             	sub    $0x8,%esp
 8048368:	e8 c3 00 00 00       	call   8048430 <__x86.get_pc_thunk.bx>
 804836d:	81 c3 93 1c 00 00    	add    $0x1c93,%ebx
 8048373:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048379:	85 c0                	test   %eax,%eax
 804837b:	74 05                	je     8048382 <_init+0x1e>
 804837d:	e8 3e 00 00 00       	call   80483c0 <__gmon_start__@plt>
 8048382:	83 c4 08             	add    $0x8,%esp
 8048385:	5b                   	pop    %ebx
 8048386:	c3                   	ret    

Disassembly of section .plt:

08048390 <memcpy@plt-0x10>:
 8048390:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048396:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804839c:	00 00                	add    %al,(%eax)
	...

080483a0 <memcpy@plt>:
 80483a0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483a6:	68 00 00 00 00       	push   $0x0
 80483ab:	e9 e0 ff ff ff       	jmp    8048390 <_init+0x2c>

080483b0 <fgets@plt>:
 80483b0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483b6:	68 08 00 00 00       	push   $0x8
 80483bb:	e9 d0 ff ff ff       	jmp    8048390 <_init+0x2c>

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483c6:	68 10 00 00 00       	push   $0x10
 80483cb:	e9 c0 ff ff ff       	jmp    8048390 <_init+0x2c>

080483d0 <strlen@plt>:
 80483d0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483d6:	68 18 00 00 00       	push   $0x18
 80483db:	e9 b0 ff ff ff       	jmp    8048390 <_init+0x2c>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483e6:	68 20 00 00 00       	push   $0x20
 80483eb:	e9 a0 ff ff ff       	jmp    8048390 <_init+0x2c>

080483f0 <fprintf@plt>:
 80483f0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483f6:	68 28 00 00 00       	push   $0x28
 80483fb:	e9 90 ff ff ff       	jmp    8048390 <_init+0x2c>

Disassembly of section .text:

08048400 <_start>:
 8048400:	31 ed                	xor    %ebp,%ebp
 8048402:	5e                   	pop    %esi
 8048403:	89 e1                	mov    %esp,%ecx
 8048405:	83 e4 f0             	and    $0xfffffff0,%esp
 8048408:	50                   	push   %eax
 8048409:	54                   	push   %esp
 804840a:	52                   	push   %edx
 804840b:	68 00 86 04 08       	push   $0x8048600
 8048410:	68 90 85 04 08       	push   $0x8048590
 8048415:	51                   	push   %ecx
 8048416:	56                   	push   %esi
 8048417:	68 26 85 04 08       	push   $0x8048526
 804841c:	e8 bf ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048421:	f4                   	hlt    
 8048422:	66 90                	xchg   %ax,%ax
 8048424:	66 90                	xchg   %ax,%ax
 8048426:	66 90                	xchg   %ax,%ax
 8048428:	66 90                	xchg   %ax,%ax
 804842a:	66 90                	xchg   %ax,%ax
 804842c:	66 90                	xchg   %ax,%ax
 804842e:	66 90                	xchg   %ax,%ax

08048430 <__x86.get_pc_thunk.bx>:
 8048430:	8b 1c 24             	mov    (%esp),%ebx
 8048433:	c3                   	ret    
 8048434:	66 90                	xchg   %ax,%ax
 8048436:	66 90                	xchg   %ax,%ax
 8048438:	66 90                	xchg   %ax,%ax
 804843a:	66 90                	xchg   %ax,%ax
 804843c:	66 90                	xchg   %ax,%ax
 804843e:	66 90                	xchg   %ax,%ax

08048440 <deregister_tm_clones>:
 8048440:	b8 33 a0 04 08       	mov    $0x804a033,%eax
 8048445:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804844a:	83 f8 06             	cmp    $0x6,%eax
 804844d:	77 01                	ja     8048450 <deregister_tm_clones+0x10>
 804844f:	c3                   	ret    
 8048450:	b8 00 00 00 00       	mov    $0x0,%eax
 8048455:	85 c0                	test   %eax,%eax
 8048457:	74 f6                	je     804844f <deregister_tm_clones+0xf>
 8048459:	55                   	push   %ebp
 804845a:	89 e5                	mov    %esp,%ebp
 804845c:	83 ec 18             	sub    $0x18,%esp
 804845f:	c7 04 24 30 a0 04 08 	movl   $0x804a030,(%esp)
 8048466:	ff d0                	call   *%eax
 8048468:	c9                   	leave  
 8048469:	c3                   	ret    
 804846a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048470 <register_tm_clones>:
 8048470:	b8 30 a0 04 08       	mov    $0x804a030,%eax
 8048475:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804847a:	c1 f8 02             	sar    $0x2,%eax
 804847d:	89 c2                	mov    %eax,%edx
 804847f:	c1 ea 1f             	shr    $0x1f,%edx
 8048482:	01 d0                	add    %edx,%eax
 8048484:	d1 f8                	sar    %eax
 8048486:	75 01                	jne    8048489 <register_tm_clones+0x19>
 8048488:	c3                   	ret    
 8048489:	ba 00 00 00 00       	mov    $0x0,%edx
 804848e:	85 d2                	test   %edx,%edx
 8048490:	74 f6                	je     8048488 <register_tm_clones+0x18>
 8048492:	55                   	push   %ebp
 8048493:	89 e5                	mov    %esp,%ebp
 8048495:	83 ec 18             	sub    $0x18,%esp
 8048498:	89 44 24 04          	mov    %eax,0x4(%esp)
 804849c:	c7 04 24 30 a0 04 08 	movl   $0x804a030,(%esp)
 80484a3:	ff d2                	call   *%edx
 80484a5:	c9                   	leave  
 80484a6:	c3                   	ret    
 80484a7:	89 f6                	mov    %esi,%esi
 80484a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484b0 <__do_global_dtors_aux>:
 80484b0:	80 3d 38 a0 04 08 00 	cmpb   $0x0,0x804a038
 80484b7:	75 13                	jne    80484cc <__do_global_dtors_aux+0x1c>
 80484b9:	55                   	push   %ebp
 80484ba:	89 e5                	mov    %esp,%ebp
 80484bc:	83 ec 08             	sub    $0x8,%esp
 80484bf:	e8 7c ff ff ff       	call   8048440 <deregister_tm_clones>
 80484c4:	c6 05 38 a0 04 08 01 	movb   $0x1,0x804a038
 80484cb:	c9                   	leave  
 80484cc:	f3 c3                	repz ret 
 80484ce:	66 90                	xchg   %ax,%ax

080484d0 <frame_dummy>:
 80484d0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484d5:	85 c0                	test   %eax,%eax
 80484d7:	74 1f                	je     80484f8 <frame_dummy+0x28>
 80484d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484de:	85 c0                	test   %eax,%eax
 80484e0:	74 16                	je     80484f8 <frame_dummy+0x28>
 80484e2:	55                   	push   %ebp
 80484e3:	89 e5                	mov    %esp,%ebp
 80484e5:	83 ec 18             	sub    $0x18,%esp
 80484e8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80484ef:	ff d0                	call   *%eax
 80484f1:	c9                   	leave  
 80484f2:	e9 79 ff ff ff       	jmp    8048470 <register_tm_clones>
 80484f7:	90                   	nop
 80484f8:	e9 73 ff ff ff       	jmp    8048470 <register_tm_clones>

080484fd <foo>:
 80484fd:	55                   	push   %ebp
 80484fe:	89 e5                	mov    %esp,%ebp
 8048500:	83 ec 28             	sub    $0x28,%esp
 8048503:	8b 45 08             	mov    0x8(%ebp),%eax
 8048506:	89 04 24             	mov    %eax,(%esp)
 8048509:	e8 c2 fe ff ff       	call   80483d0 <strlen@plt>
 804850e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048512:	8b 45 08             	mov    0x8(%ebp),%eax
 8048515:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048519:	8d 45 ec             	lea    -0x14(%ebp),%eax
 804851c:	89 04 24             	mov    %eax,(%esp)
 804851f:	e8 7c fe ff ff       	call   80483a0 <memcpy@plt>
 8048524:	c9                   	leave  
 8048525:	c3                   	ret    

08048526 <main>:
 8048526:	55                   	push   %ebp
 8048527:	89 e5                	mov    %esp,%ebp
 8048529:	83 e4 f0             	and    $0xfffffff0,%esp
 804852c:	81 ec 20 10 00 00    	sub    $0x1020,%esp
 8048532:	c7 84 24 1c 10 00 00 	movl   $0x804a01c,0x101c(%esp)
 8048539:	1c a0 04 08 
 804853d:	8b 84 24 1c 10 00 00 	mov    0x101c(%esp),%eax
 8048544:	8b 10                	mov    (%eax),%edx
 8048546:	a1 30 a0 04 08       	mov    0x804a030,%eax
 804854b:	89 54 24 08          	mov    %edx,0x8(%esp)
 804854f:	c7 44 24 04 28 86 04 	movl   $0x8048628,0x4(%esp)
 8048556:	08 
 8048557:	89 04 24             	mov    %eax,(%esp)
 804855a:	e8 91 fe ff ff       	call   80483f0 <fprintf@plt>
 804855f:	a1 34 a0 04 08       	mov    0x804a034,%eax
 8048564:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048568:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 804856f:	00 
 8048570:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048574:	89 04 24             	mov    %eax,(%esp)
 8048577:	e8 34 fe ff ff       	call   80483b0 <fgets@plt>
 804857c:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048580:	89 04 24             	mov    %eax,(%esp)
 8048583:	e8 75 ff ff ff       	call   80484fd <foo>
 8048588:	c9                   	leave  
 8048589:	c3                   	ret    
 804858a:	66 90                	xchg   %ax,%ax
 804858c:	66 90                	xchg   %ax,%ax
 804858e:	66 90                	xchg   %ax,%ax

08048590 <__libc_csu_init>:
 8048590:	55                   	push   %ebp
 8048591:	57                   	push   %edi
 8048592:	31 ff                	xor    %edi,%edi
 8048594:	56                   	push   %esi
 8048595:	53                   	push   %ebx
 8048596:	e8 95 fe ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 804859b:	81 c3 65 1a 00 00    	add    $0x1a65,%ebx
 80485a1:	83 ec 1c             	sub    $0x1c,%esp
 80485a4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485a8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80485ae:	e8 b1 fd ff ff       	call   8048364 <_init>
 80485b3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80485b9:	29 c6                	sub    %eax,%esi
 80485bb:	c1 fe 02             	sar    $0x2,%esi
 80485be:	85 f6                	test   %esi,%esi
 80485c0:	74 27                	je     80485e9 <__libc_csu_init+0x59>
 80485c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485c8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485cc:	89 2c 24             	mov    %ebp,(%esp)
 80485cf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485d3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485d7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485db:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80485e2:	83 c7 01             	add    $0x1,%edi
 80485e5:	39 f7                	cmp    %esi,%edi
 80485e7:	75 df                	jne    80485c8 <__libc_csu_init+0x38>
 80485e9:	83 c4 1c             	add    $0x1c,%esp
 80485ec:	5b                   	pop    %ebx
 80485ed:	5e                   	pop    %esi
 80485ee:	5f                   	pop    %edi
 80485ef:	5d                   	pop    %ebp
 80485f0:	c3                   	ret    
 80485f1:	eb 0d                	jmp    8048600 <__libc_csu_fini>
 80485f3:	90                   	nop
 80485f4:	90                   	nop
 80485f5:	90                   	nop
 80485f6:	90                   	nop
 80485f7:	90                   	nop
 80485f8:	90                   	nop
 80485f9:	90                   	nop
 80485fa:	90                   	nop
 80485fb:	90                   	nop
 80485fc:	90                   	nop
 80485fd:	90                   	nop
 80485fe:	90                   	nop
 80485ff:	90                   	nop

08048600 <__libc_csu_fini>:
 8048600:	f3 c3                	repz ret 

Disassembly of section .fini:

08048604 <_fini>:
 8048604:	53                   	push   %ebx
 8048605:	83 ec 08             	sub    $0x8,%esp
 8048608:	e8 23 fe ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 804860d:	81 c3 f3 19 00 00    	add    $0x19f3,%ebx
 8048613:	83 c4 08             	add    $0x8,%esp
 8048616:	5b                   	pop    %ebx
 8048617:	c3                   	ret    

Disassembly of section .rodata:

08048618 <_fp_hw>:
 8048618:	03 00                	add    (%eax),%eax
	...

0804861c <_IO_stdin_used>:
 804861c:	01 00                	add    %eax,(%eax)
 804861e:	02 00                	add    (%eax),%al
 8048620:	2f                   	das    
 8048621:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 8048624:	2f                   	das    
 8048625:	73 68                	jae    804868f <_IO_stdin_used+0x73>
 8048627:	00 46 75             	add    %al,0x75(%esi)
 804862a:	6e                   	outsb  %ds:(%esi),(%dx)
 804862b:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 804862f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048630:	3a 20                	cmp    (%eax),%ah
 8048632:	6c                   	insb   (%dx),%es:(%edi)
 8048633:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804863a:	72 74                	jb     80486b0 <_IO_stdin_used+0x94>
 804863c:	5f                   	pop    %edi
 804863d:	6d                   	insl   (%dx),%es:(%edi)
 804863e:	61                   	popa   
 804863f:	69 6e 27 73 20 61 64 	imul   $0x64612073,0x27(%esi),%ebp
 8048646:	64                   	fs
 8048647:	72 65                	jb     80486ae <_IO_stdin_used+0x92>
 8048649:	73 73                	jae    80486be <_IO_stdin_used+0xa2>
 804864b:	20 69 73             	and    %ch,0x73(%ecx)
 804864e:	20 3a                	and    %bh,(%edx)
 8048650:	20 20                	and    %ah,(%eax)
 8048652:	30 78 25             	xor    %bh,0x25(%eax)
 8048655:	78 0a                	js     8048661 <_IO_stdin_used+0x45>
	...

Disassembly of section .eh_frame_hdr:

08048658 <.eh_frame_hdr>:
 8048658:	01 1b                	add    %ebx,(%ebx)
 804865a:	03 3b                	add    (%ebx),%edi
 804865c:	30 00                	xor    %al,(%eax)
 804865e:	00 00                	add    %al,(%eax)
 8048660:	05 00 00 00 38       	add    $0x38000000,%eax
 8048665:	fd                   	std    
 8048666:	ff                   	(bad)  
 8048667:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 804866b:	00 a5 fe ff ff 70    	add    %ah,0x70fffffe(%ebp)
 8048671:	00 00                	add    %al,(%eax)
 8048673:	00 ce                	add    %cl,%dh
 8048675:	fe                   	(bad)  
 8048676:	ff                   	(bad)  
 8048677:	ff 90 00 00 00 38    	call   *0x38000000(%eax)
 804867d:	ff                   	(bad)  
 804867e:	ff                   	(bad)  
 804867f:	ff b0 00 00 00 a8    	pushl  -0x58000000(%eax)
 8048685:	ff                   	(bad)  
 8048686:	ff                   	(bad)  
 8048687:	ff ec                	ljmp   *<internal disassembler error>
 8048689:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

0804868c <__FRAME_END__-0xcc>:
 804868c:	14 00                	adc    $0x0,%al
 804868e:	00 00                	add    %al,(%eax)
 8048690:	00 00                	add    %al,(%eax)
 8048692:	00 00                	add    %al,(%eax)
 8048694:	01 7a 52             	add    %edi,0x52(%edx)
 8048697:	00 01                	add    %al,(%ecx)
 8048699:	7c 08                	jl     80486a3 <_IO_stdin_used+0x87>
 804869b:	01 1b                	add    %ebx,(%ebx)
 804869d:	0c 04                	or     $0x4,%al
 804869f:	04 88                	add    $0x88,%al
 80486a1:	01 00                	add    %eax,(%eax)
 80486a3:	00 20                	add    %ah,(%eax)
 80486a5:	00 00                	add    %al,(%eax)
 80486a7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80486aa:	00 00                	add    %al,(%eax)
 80486ac:	e4 fc                	in     $0xfc,%al
 80486ae:	ff                   	(bad)  
 80486af:	ff 70 00             	pushl  0x0(%eax)
 80486b2:	00 00                	add    %al,(%eax)
 80486b4:	00 0e                	add    %cl,(%esi)
 80486b6:	08 46 0e             	or     %al,0xe(%esi)
 80486b9:	0c 4a                	or     $0x4a,%al
 80486bb:	0f 0b                	ud2    
 80486bd:	74 04                	je     80486c3 <_IO_stdin_used+0xa7>
 80486bf:	78 00                	js     80486c1 <_IO_stdin_used+0xa5>
 80486c1:	3f                   	aas    
 80486c2:	1a 3b                	sbb    (%ebx),%bh
 80486c4:	2a 32                	sub    (%edx),%dh
 80486c6:	24 22                	and    $0x22,%al
 80486c8:	1c 00                	sbb    $0x0,%al
 80486ca:	00 00                	add    %al,(%eax)
 80486cc:	40                   	inc    %eax
 80486cd:	00 00                	add    %al,(%eax)
 80486cf:	00 2d fe ff ff 29    	add    %ch,0x29fffffe
 80486d5:	00 00                	add    %al,(%eax)
 80486d7:	00 00                	add    %al,(%eax)
 80486d9:	41                   	inc    %ecx
 80486da:	0e                   	push   %cs
 80486db:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80486e1:	65 c5 0c 04          	lds    %gs:(%esp,%eax,1),%ecx
 80486e5:	04 00                	add    $0x0,%al
 80486e7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80486ea:	00 00                	add    %al,(%eax)
 80486ec:	60                   	pusha  
 80486ed:	00 00                	add    %al,(%eax)
 80486ef:	00 36                	add    %dh,(%esi)
 80486f1:	fe                   	(bad)  
 80486f2:	ff                   	(bad)  
 80486f3:	ff 64 00 00          	jmp    *0x0(%eax,%eax,1)
 80486f7:	00 00                	add    %al,(%eax)
 80486f9:	41                   	inc    %ecx
 80486fa:	0e                   	push   %cs
 80486fb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048701:	02 60 c5             	add    -0x3b(%eax),%ah
 8048704:	0c 04                	or     $0x4,%al
 8048706:	04 00                	add    $0x0,%al
 8048708:	38 00                	cmp    %al,(%eax)
 804870a:	00 00                	add    %al,(%eax)
 804870c:	80 00 00             	addb   $0x0,(%eax)
 804870f:	00 80 fe ff ff 61    	add    %al,0x61fffffe(%eax)
 8048715:	00 00                	add    %al,(%eax)
 8048717:	00 00                	add    %al,(%eax)
 8048719:	41                   	inc    %ecx
 804871a:	0e                   	push   %cs
 804871b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048721:	87 03                	xchg   %eax,(%ebx)
 8048723:	43                   	inc    %ebx
 8048724:	0e                   	push   %cs
 8048725:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804872b:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048732:	0e                   	push   %cs
 8048733:	14 41                	adc    $0x41,%al
 8048735:	c3                   	ret    
 8048736:	0e                   	push   %cs
 8048737:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804873a:	0e                   	push   %cs
 804873b:	0c 41                	or     $0x41,%al
 804873d:	c7                   	(bad)  
 804873e:	0e                   	push   %cs
 804873f:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048742:	0e                   	push   %cs
 8048743:	04 10                	add    $0x10,%al
 8048745:	00 00                	add    %al,(%eax)
 8048747:	00 bc 00 00 00 b4 fe 	add    %bh,-0x14c0000(%eax,%eax,1)
 804874e:	ff                   	(bad)  
 804874f:	ff 02                	incl   (%edx)
 8048751:	00 00                	add    %al,(%eax)
 8048753:	00 00                	add    %al,(%eax)
 8048755:	00 00                	add    %al,(%eax)
	...

08048758 <__FRAME_END__>:
 8048758:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	d0                   	.byte 0xd0
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	b0 84                	mov    $0x84,%al
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	64 83 04 08 0d       	addl   $0xd,%fs:(%eax,%ecx,1)
 8049f25:	00 00                	add    %al,(%eax)
 8049f27:	00 04 86             	add    %al,(%esi,%eax,4)
 8049f2a:	04 08                	add    $0x8,%al
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	78 82                	js     8049edc <__FRAME_END__+0x1784>
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 d8                	add    %bl,%al
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	6e                   	outsb  %ds:(%esi),(%dx)
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	30 00                	xor    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 34 83             	add    %dh,(%ebx,%eax,4)
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	1c 83                	sbb    $0x83,%al
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	18 00                	sbb    %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f fc             	ljmp   *-0x4(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f e6             	ljmp   *-0x1a(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a00d:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a011:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a015:	83 04 08 d6          	addl   $0xffffffd6,(%eax,%ecx,1)
 804a019:	83 04 08 e6          	addl   $0xffffffe6,(%eax,%ecx,1)
 804a01d:	83 04 08 f6          	addl   $0xfffffff6,(%eax,%ecx,1)
 804a021:	83                   	.byte 0x83
 804a022:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a024 <__data_start>:
 804a024:	00 00                	add    %al,(%eax)
	...

0804a028 <__dso_handle>:
 804a028:	00 00                	add    %al,(%eax)
	...

0804a02c <binsh>:
 804a02c:	20                   	.byte 0x20
 804a02d:	86 04 08             	xchg   %al,(%eax,%ecx,1)

Disassembly of section .bss:

0804a030 <__bss_start>:
 804a030:	00 00                	add    %al,(%eax)
	...

0804a034 <stdin@@GLIBC_2.0>:
 804a034:	00 00                	add    %al,(%eax)
	...

0804a038 <completed.6590>:
 804a038:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482ec>
   a:	74 75                	je     81 <_init-0x80482e3>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  17:	75 6e                	jne    87 <_init-0x80482dd>
  19:	74 75                	je     90 <_init-0x80482d4>
  1b:	31 29                	xor    %ebp,(%ecx)
  1d:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  20:	38 2e                	cmp    %ch,(%esi)
  22:	32 00                	xor    (%eax),%al
